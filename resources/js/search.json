[[{"i":"welcome","l":"Welcome!","p":["Welcome to the beginners' guide to using Kotlin in your FTC codebase! This guide assumes that you know how to program in Kotlin, but no other FTC programming knowledge is necessary. This guide is meant for absolute beginners who do not have any experience with programming for FTC. If you already know how to do FTC programming in Java, or can easily translate Java to Kotlin, I would recommend doing that because more resources are written in Java. As this guide is meant for beginners and won't cover certain advanced topics, I would also recommend that you look at Java-specific guides afterwards. I fidn that is easier to understand Java-based FTC code now that I understand how the FTC SDK works."]},{"l":"Contributing","p":["To contribute, all you have to do is make a pull request with the changes you would like to make. This is greatly appreciated as this is currently a solo, volunteer project."]},{"l":"Running locally","p":["To run this website locally, first install Retype. This can be accomplished by doing the following:","After navigating to the directory where you cloned the repository, run the following command to open the website in your web browser:"]}],[{"l":"Prerequisites","p":["Before you begin programming, there are a few tasks that need to be completed to ensure your hardware is ready."]},{"l":"Hardware Setup","p":["Assuming you are using a REV Control Hub, REV has graciously provided a guide on configuring it. It is recommended to read through \"Next Steps\" as we will be going into more detail about some of the things that are mentioned.","FIRST has also provided a guide for making a configuration file for your robot, as well as physically connecting hardware. Please note that FIRST's choice of hardware in this tutorial does not necessarily reflect best practices and modern preferences for certain devices, and that due diligence should be done in choosing devices."]},{"l":"Software Setup","p":["Before proceeding with this guide, please make sure you have done the following:","Have the latest version of Android Studio downloaded and installed.","Have a repository containing the latest version of the FTC SDK. I would recommend forking this on Github first and then cloning the fork locally.","Make sure the Kotlin Plugin is downloaded in Android Studio."]}],[{"l":"Installation","p":["Installing Kotlin into your FTC project is very easy and shouldn't take more than a few minutes."]},{"l":"Project Gradle Script","p":["The first step of adding Kotlin to your FTC project is by adding Kotlin to the build.gradle file that has Project: REPO-NAME next to it. Add the indicated lines of code to the aforementioned file:"]},{"l":"TeamCode Gradle Script","p":["The only other thing you have to do is copy the indicated line of code into the build.gradle file that has Module: TeamCode next to it.","If you are confused on where to copy the code, I have labeled the place to copy the first set of lines in blue, and the other line in yellow. Please ignore everything else, as this is a preexisting project that has other libraries installed. After doing this, you should be ready to start programming!"]}],[{"i":"what-is-an-opmode","l":"What is an OpMode?","p":["An OpMode is a class that you create that is runnable on your robot.","There are two types of classes that can be extended to make an OpMode: LinearOpMode and OpMode. Both will be explained in this guide, but LinearOpMode will be used for any further examples for simplicity sake.","The general rule is that code in a regular OpMode is divided up based on when and how it runs, while code in a LinearOpMode runs consecutively using methods to pause execution."]},{"l":"LinearOpMode","p":["Here are the most important methods included in the LinearOpMode class. Certain methods have been excluded because they aren't needed for amateur programmers, but you can find all of them in FIRST's documentation.","runOpMode( ) All code within this method will run once when the OpMode is initialized on your Driver Station.","waitForStart() This method will pause execution of code until you press the \"Start\" button on your driver station. This would be used if you wanted to run code in between initializing the code and the start of the period during a match.","isStarted() This method will return true if the \"Start\" button has been pressed.","isStopRequested() This method will return true if the \"Stop\" button was pressed.","opModeIsActive() will return isStarted() !isStopRequested()","opModeInInit() will return !isStarted() !isStopRequested()","Here is an example LinearOpMode that uses some of these methods:"]}],[{"l":"Hardware Map and Configuration"},{"i":"what-is-a-hardwaremap","l":"What is a HardwareMap?","p":["A HardwareMap is a class in the FTC SDK that, using its get method, takes a class for a specific device and its name in the configuration file you made using your REV Driver Hub. It then returns an object for the device you inputted and allows for you to control it in code."]}]]